Terminals unused in grammar

   DO
   BREAK
   CONTINUE
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT


State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: func_definition
    5     | var_declaration

    6 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier ID LPAREN RPAREN compound_statement

    8 parameter_list: parameter_list COMMA type_specifier ID
    9               | parameter_list COMMA type_specifier
   10               | type_specifier ID
   11               | type_specifier

   12 compound_statement: LCURL statements RCURL
   13                   | LCURL RCURL
   14                   | LCURL statements RCURL ELSE compound_statement

   15 var_declaration: type_specifier declaration_list SEMICOLON

   16 type_specifier: INT
   17               | FLOAT
   18               | VOID

   19 declaration_list: declaration_list COMMA ID
   20                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   21                 | ID
   22                 | ID LTHIRD CONST_INT RTHIRD

   23 statements: statement
   24           | statements statement

   25 statement: var_declaration
   26          | expression_statement
   27          | compound_statement
   28          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   29          | IF LPAREN expression RPAREN statement
   30          | IF LPAREN expression RPAREN statement ELSE statement
   31          | WHILE LPAREN expression RPAREN statement
   32          | PRINTLN LPAREN ID RPAREN SEMICOLON
   33          | RETURN expression SEMICOLON

   34 expression_statement: SEMICOLON
   35                     | expression SEMICOLON

   36 expression: logic_expression
   37           | variable ASSIGNOP logic_expression

   38 logic_expression: rel_expression
   39                 | logic_expression LOGICOP rel_expression

   40 rel_expression: simple_expression
   41               | simple_expression RELOP simple_expression

   42 simple_expression: term
   43                  | simple_expression ADDOP term

   44 term: unary_expression
   45     | term MULOP unary_expression

   46 unary_expression: ADDOP unary_expression
   47                 | NOT unary_expression
   48                 | factor

   49 factor: variable
   50       | ID LPAREN argument_list RPAREN
   51       | LPAREN expression RPAREN
   52       | CONST_INT
   53       | CONST_FLOAT
   54       | variable INCOP
   55       | variable DECOP

   56 argument_list: arguments
   57              | /* empty */

   58 arguments: arguments COMMA logic_expression
   59          | logic_expression

   60 variable: ID
   61         | ID LTHIRD expression RTHIRD


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 29 30
ELSE (259) 14 30
FOR (260) 28
WHILE (261) 31
DO (262)
BREAK (263)
CONTINUE (264)
RETURN (265) 33
INT (266) 16
FLOAT (267) 17
CHAR (268)
VOID (269) 18
DOUBLE (270)
SWITCH (271)
CASE (272)
DEFAULT (273)
PRINTLN (274) 32
ADDOP (275) 43 46
MULOP (276) 45
INCOP (277) 54
DECOP (278) 55
RELOP (279) 41
LOGICOP (280) 39
NOT (281) 47
ASSIGNOP (282) 37
LPAREN (283) 6 7 28 29 30 31 32 50 51
RPAREN (284) 6 7 28 29 30 31 32 50 51
LCURL (285) 12 13 14
RCURL (286) 12 13 14
LTHIRD (287) 20 22 61
RTHIRD (288) 20 22 61
SEMICOLON (289) 15 32 33 34 35
COMMA (290) 8 9 19 20 58
ID (291) 6 7 8 10 19 20 21 22 32 50 60 61
CONST_INT (292) 20 22 52
CONST_FLOAT (293) 53
LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3, on right: 1 2
unit (43)
    on left: 4 5, on right: 2 3
func_definition (44)
    on left: 6 7, on right: 4
parameter_list (45)
    on left: 8 9 10 11, on right: 6 8 9
compound_statement (46)
    on left: 12 13 14, on right: 6 7 14 27
var_declaration (47)
    on left: 15, on right: 5 25
type_specifier (48)
    on left: 16 17 18, on right: 6 7 8 9 10 11 15
declaration_list (49)
    on left: 19 20 21 22, on right: 15 19 20
statements (50)
    on left: 23 24, on right: 12 14 24
statement (51)
    on left: 25 26 27 28 29 30 31 32 33, on right: 23 24 28 29 30 31
expression_statement (52)
    on left: 34 35, on right: 26 28
expression (53)
    on left: 36 37, on right: 28 29 30 31 33 35 51 61
logic_expression (54)
    on left: 38 39, on right: 36 37 39 58 59
rel_expression (55)
    on left: 40 41, on right: 38 39
simple_expression (56)
    on left: 42 43, on right: 40 41 43
term (57)
    on left: 44 45, on right: 42 43 45
unary_expression (58)
    on left: 46 47 48, on right: 44 45 46 47
factor (59)
    on left: 49 50 51 52 53 54 55, on right: 48
argument_list (60)
    on left: 56 57, on right: 50
arguments (61)
    on left: 58 59, on right: 56 58
variable (62)
    on left: 60 61, on right: 37 49 54 55


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start            go to state 4
    program          go to state 5
    unit             go to state 6
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 1

   16 type_specifier: INT .

    $default  reduce using rule 16 (type_specifier)


State 2

   17 type_specifier: FLOAT .

    $default  reduce using rule 17 (type_specifier)


State 3

   18 type_specifier: VOID .

    $default  reduce using rule 18 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 10


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit             go to state 11
    func_definition  go to state 7
    var_declaration  go to state 8
    type_specifier   go to state 9


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    4 unit: func_definition .

    $default  reduce using rule 4 (unit)


State 8

    5 unit: var_declaration .

    $default  reduce using rule 5 (unit)


State 9

    6 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier . ID LPAREN RPAREN compound_statement
   15 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 12

    declaration_list  go to state 13


State 10

    0 $accept: start $end .

    $default  accept


State 11

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 12

    6 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
    7                | type_specifier ID . LPAREN RPAREN compound_statement
   21 declaration_list: ID .
   22                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 14
    LTHIRD  shift, and go to state 15

    $default  reduce using rule 21 (declaration_list)


State 13

   15 var_declaration: type_specifier declaration_list . SEMICOLON
   19 declaration_list: declaration_list . COMMA ID
   20                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 16
    COMMA      shift, and go to state 17


State 14

    6 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement
    7                | type_specifier ID LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 18

    parameter_list  go to state 19
    type_specifier  go to state 20


State 15

   22 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 16

   15 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 15 (var_declaration)


State 17

   19 declaration_list: declaration_list COMMA . ID
   20                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 18

    7 func_definition: type_specifier ID LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 23

    compound_statement  go to state 24


State 19

    6 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
    8 parameter_list: parameter_list . COMMA type_specifier ID
    9               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 25
    COMMA   shift, and go to state 26


State 20

   10 parameter_list: type_specifier . ID
   11               | type_specifier .

    ID  shift, and go to state 27

    $default  reduce using rule 11 (parameter_list)


State 21

   22 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 28


State 22

   19 declaration_list: declaration_list COMMA ID .
   20                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 29

    $default  reduce using rule 19 (declaration_list)


State 23

   12 compound_statement: LCURL . statements RCURL
   13                   | LCURL . RCURL
   14                   | LCURL . statements RCURL ELSE compound_statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    RCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statements            go to state 46
    statement             go to state 47
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 24

    7 func_definition: type_specifier ID LPAREN RPAREN compound_statement .

    $default  reduce using rule 7 (func_definition)


State 25

    6 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL  shift, and go to state 23

    compound_statement  go to state 57


State 26

    8 parameter_list: parameter_list COMMA . type_specifier ID
    9               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 58


State 27

   10 parameter_list: type_specifier ID .

    $default  reduce using rule 10 (parameter_list)


State 28

   22 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 22 (declaration_list)


State 29

   20 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 59


State 30

   29 statement: IF . LPAREN expression RPAREN statement
   30          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


State 31

   28 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 61


State 32

   31 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 62


State 33

   33 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 63
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 34

   32 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 64


State 35

   46 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    unary_expression  go to state 65
    factor            go to state 55
    variable          go to state 66


State 36

   47 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    unary_expression  go to state 67
    factor            go to state 55
    variable          go to state 66


State 37

   51 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 68
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 38

   13 compound_statement: LCURL RCURL .

    $default  reduce using rule 13 (compound_statement)


State 39

   34 expression_statement: SEMICOLON .

    $default  reduce using rule 34 (expression_statement)


State 40

   50 factor: ID . LPAREN argument_list RPAREN
   60 variable: ID .
   61         | ID . LTHIRD expression RTHIRD

    LPAREN  shift, and go to state 69
    LTHIRD  shift, and go to state 70

    $default  reduce using rule 60 (variable)


State 41

   52 factor: CONST_INT .

    $default  reduce using rule 52 (factor)


State 42

   53 factor: CONST_FLOAT .

    $default  reduce using rule 53 (factor)


State 43

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 44

   25 statement: var_declaration .

    $default  reduce using rule 25 (statement)


State 45

   15 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 71

    declaration_list  go to state 13


State 46

   12 compound_statement: LCURL statements . RCURL
   14                   | LCURL statements . RCURL ELSE compound_statement
   24 statements: statements . statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    RCURL        shift, and go to state 72
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statement             go to state 73
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 47

   23 statements: statement .

    $default  reduce using rule 23 (statements)


State 48

   26 statement: expression_statement .

    $default  reduce using rule 26 (statement)


State 49

   35 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 50

   36 expression: logic_expression .
   39 logic_expression: logic_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 75

    $default  reduce using rule 36 (expression)


State 51

   38 logic_expression: rel_expression .

    $default  reduce using rule 38 (logic_expression)


State 52

   40 rel_expression: simple_expression .
   41               | simple_expression . RELOP simple_expression
   43 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 76
    RELOP  shift, and go to state 77

    $default  reduce using rule 40 (rel_expression)


State 53

   42 simple_expression: term .
   45 term: term . MULOP unary_expression

    MULOP  shift, and go to state 78

    $default  reduce using rule 42 (simple_expression)


State 54

   44 term: unary_expression .

    $default  reduce using rule 44 (term)


State 55

   48 unary_expression: factor .

    $default  reduce using rule 48 (unary_expression)


State 56

   37 expression: variable . ASSIGNOP logic_expression
   49 factor: variable .
   54       | variable . INCOP
   55       | variable . DECOP

    INCOP     shift, and go to state 79
    DECOP     shift, and go to state 80
    ASSIGNOP  shift, and go to state 81

    $default  reduce using rule 49 (factor)


State 57

    6 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 6 (func_definition)


State 58

    8 parameter_list: parameter_list COMMA type_specifier . ID
    9               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 82

    $default  reduce using rule 9 (parameter_list)


State 59

   20 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 83


State 60

   29 statement: IF LPAREN . expression RPAREN statement
   30          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 84
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 61

   28 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression_statement  go to state 85
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 62

   31 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 86
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 63

   33 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 64

   32 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 88


State 65

   46 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 46 (unary_expression)


State 66

   49 factor: variable .
   54       | variable . INCOP
   55       | variable . DECOP

    INCOP  shift, and go to state 79
    DECOP  shift, and go to state 80

    $default  reduce using rule 49 (factor)


State 67

   47 unary_expression: NOT unary_expression .

    $default  reduce using rule 47 (unary_expression)


State 68

   51 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 89


State 69

   50 factor: ID LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    $default  reduce using rule 57 (argument_list)

    logic_expression   go to state 90
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    argument_list      go to state 91
    arguments          go to state 92
    variable           go to state 66


State 70

   61 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 93
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 71

   21 declaration_list: ID .
   22                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15

    $default  reduce using rule 21 (declaration_list)


State 72

   12 compound_statement: LCURL statements RCURL .
   14                   | LCURL statements RCURL . ELSE compound_statement

    ELSE  shift, and go to state 94

    ELSE      [reduce using rule 12 (compound_statement)]
    $default  reduce using rule 12 (compound_statement)


State 73

   24 statements: statements statement .

    $default  reduce using rule 24 (statements)


State 74

   35 expression_statement: expression SEMICOLON .

    $default  reduce using rule 35 (expression_statement)


State 75

   39 logic_expression: logic_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    rel_expression     go to state 95
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 66


State 76

   43 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    term              go to state 96
    unary_expression  go to state 54
    factor            go to state 55
    variable          go to state 66


State 77

   41 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    simple_expression  go to state 97
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 66


State 78

   45 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    unary_expression  go to state 98
    factor            go to state 55
    variable          go to state 66


State 79

   54 factor: variable INCOP .

    $default  reduce using rule 54 (factor)


State 80

   55 factor: variable DECOP .

    $default  reduce using rule 55 (factor)


State 81

   37 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    logic_expression   go to state 99
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 66


State 82

    8 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 8 (parameter_list)


State 83

   20 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 20 (declaration_list)


State 84

   29 statement: IF LPAREN expression . RPAREN statement
   30          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 100


State 85

   28 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression_statement  go to state 101
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 86

   31 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 102


State 87

   33 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 33 (statement)


State 88

   32 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 103


State 89

   51 factor: LPAREN expression RPAREN .

    $default  reduce using rule 51 (factor)


State 90

   39 logic_expression: logic_expression . LOGICOP rel_expression
   59 arguments: logic_expression .

    LOGICOP  shift, and go to state 75

    $default  reduce using rule 59 (arguments)


State 91

   50 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 104


State 92

   56 argument_list: arguments .
   58 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 105

    $default  reduce using rule 56 (argument_list)


State 93

   61 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 106


State 94

   14 compound_statement: LCURL statements RCURL ELSE . compound_statement

    LCURL  shift, and go to state 23

    compound_statement  go to state 107


State 95

   39 logic_expression: logic_expression LOGICOP rel_expression .

    $default  reduce using rule 39 (logic_expression)


State 96

   43 simple_expression: simple_expression ADDOP term .
   45 term: term . MULOP unary_expression

    MULOP  shift, and go to state 78

    $default  reduce using rule 43 (simple_expression)


State 97

   41 rel_expression: simple_expression RELOP simple_expression .
   43 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 76

    $default  reduce using rule 41 (rel_expression)


State 98

   45 term: term MULOP unary_expression .

    $default  reduce using rule 45 (term)


State 99

   37 expression: variable ASSIGNOP logic_expression .
   39 logic_expression: logic_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 75

    $default  reduce using rule 37 (expression)


State 100

   29 statement: IF LPAREN expression RPAREN . statement
   30          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statement             go to state 108
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 101

   28 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    expression         go to state 109
    logic_expression   go to state 50
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 56


State 102

   31 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statement             go to state 110
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 103

   32 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 104

   50 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 50 (factor)


State 105

   58 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    logic_expression   go to state 112
    rel_expression     go to state 51
    simple_expression  go to state 52
    term               go to state 53
    unary_expression   go to state 54
    factor             go to state 55
    variable           go to state 66


State 106

   61 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 61 (variable)


State 107

   14 compound_statement: LCURL statements RCURL ELSE compound_statement .

    $default  reduce using rule 14 (compound_statement)


State 108

   29 statement: IF LPAREN expression RPAREN statement .
   30          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 113

    $default  reduce using rule 29 (statement)


State 109

   28 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 114


State 110

   31 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 31 (statement)


State 111

   32 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 32 (statement)


State 112

   39 logic_expression: logic_expression . LOGICOP rel_expression
   58 arguments: arguments COMMA logic_expression .

    LOGICOP  shift, and go to state 75

    $default  reduce using rule 58 (arguments)


State 113

   30 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statement             go to state 115
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 114

   28 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 30
    FOR          shift, and go to state 31
    WHILE        shift, and go to state 32
    RETURN       shift, and go to state 33
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    PRINTLN      shift, and go to state 34
    ADDOP        shift, and go to state 35
    NOT          shift, and go to state 36
    LPAREN       shift, and go to state 37
    LCURL        shift, and go to state 23
    SEMICOLON    shift, and go to state 39
    ID           shift, and go to state 40
    CONST_INT    shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42

    compound_statement    go to state 43
    var_declaration       go to state 44
    type_specifier        go to state 45
    statement             go to state 116
    expression_statement  go to state 48
    expression            go to state 49
    logic_expression      go to state 50
    rel_expression        go to state 51
    simple_expression     go to state 52
    term                  go to state 53
    unary_expression      go to state 54
    factor                go to state 55
    variable              go to state 56


State 115

   30 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 30 (statement)


State 116

   28 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 28 (statement)
