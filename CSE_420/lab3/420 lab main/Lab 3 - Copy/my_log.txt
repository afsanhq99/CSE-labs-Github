At line no: 0 type_specifier : INT 

int

At line no: 0 declaration_list : ID 

x

At line no: 0 declaration_list : declaration_list COMMA ID 

x, y

At line no: 0 declaration_list : declaration_list COMMA ID 

x, y, z

At line no: 0 var_declaration : type_specifier declaration_list SEMICOLON 

int x, y, z;

At line no: 0 type_specifier : FLOAT 

float

At line no: 0 declaration_list : ID 

a

At line no: 0 var_declaration : type_specifier declaration_list SEMICOLON 

float a;

At line no: 0 program : program unit 

int x, y, z;
float a;

At line no: 2 type_specifier : INT 

int

At line no: 2 type_specifier : INT 

int

At line no: 2 parameter_list : type_specifier ID 

int a

At line no: 2 type_specifier : INT 

int

At line no: 2 parameter_list : parameter_list COMMA type_specifier ID 

int a, int b

At line no: 3 variable : ID 

a

At line no: 3 variable : ID 

b

At line no: 3 simple_expression : simple_expression ADDOP term 

a+b

At line no: 3 statement : RETURN expression SEMICOLON 

return a+b;

At line no: 6 compound_statement : LCURL statements RCURL 

{
return a+b;
}

At line no: 6 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement 

int var()
b

At line no: 6 program : program unit 

int x, y, z;
float a;
int var()
b

At line no: 6 type_specifier : VOID 

void

At line no: 7 variable : ID 

x

At line no: 7 factor : CONST_INT 

2

At line no: 7 expression : variable ASSIGNOP logic_expression 

x=2

At line no: 7 expression_statement : expression SEMICOLON 

x=2;

At line no: 7 statement : expression_statement 

x=2;

At line no: 8 variable : ID 

y

At line no: 8 variable : ID 

x

At line no: 8 factor : CONST_INT 

5

At line no: 8 simple_expression : simple_expression ADDOP term 

x-5

At line no: 8 expression : variable ASSIGNOP logic_expression 

y=x-5

At line no: 8 expression_statement : expression SEMICOLON 

y=x-5;

At line no: 8 statement : expression_statement 

y=x-5;

At line no: 11 compound_statement : LCURL statements RCURL 

{
x=2;
}

At line no: 11 func_definition : type_specifier ID LPAREN RPAREN compound_statement 

void foo()
{
x=2;
}

At line no: 11 program : program unit 

int x, y, z;
float a;
int var()
b
void foo()
{
x=2;
}

At line no: 11 type_specifier : INT 

int

At line no: 12 type_specifier : INT 

int

At line no: 12 declaration_list : ID LTHIRD CONST_INT RTHIRD 

a[2]

At line no: 12 declaration_list : declaration_list COMMA ID 

a[2], c

At line no: 12 declaration_list : declaration_list COMMA ID 

a[2], c, i

At line no: 12 declaration_list : declaration_list COMMA ID 

a[2], c, i, j

At line no: 12 var_declaration : type_specifier declaration_list SEMICOLON 

int a[2], c, i, j;

At line no: 12 statement : var_declaration 

int a[2], c, i, j;

At line no: 12 type_specifier : FLOAT 

float

At line no: 12 declaration_list : ID 

d

At line no: 12 var_declaration : type_specifier declaration_list SEMICOLON 

float d;

At line no: 12 statement : var_declaration 

float d;

At line no: 13 factor : CONST_INT 

0

At line no: 13 variable : ID LTHIRD expression RTHIRD 

a[0]

At line no: 13 expression_statement : expression SEMICOLON 

a[0];

At line no: 13 statement : expression_statement 

a[0];

At line no: 14 factor : CONST_INT 

1

At line no: 14 variable : ID LTHIRD expression RTHIRD 

a[1]

At line no: 14 factor : CONST_INT 

5

At line no: 14 expression : variable ASSIGNOP logic_expression 

a[1]=5

At line no: 14 expression_statement : expression SEMICOLON 

a[1]=5;

At line no: 14 statement : expression_statement 

a[1]=5;

At line no: 15 variable : ID 

i

At line no: 15 factor : CONST_INT 

0

At line no: 15 variable : ID LTHIRD expression RTHIRD 

a[0]

At line no: 15 factor : CONST_INT 

1

At line no: 15 variable : ID LTHIRD expression RTHIRD 

a[1]

At line no: 15 simple_expression : simple_expression ADDOP term 

a[0]+a[1]

At line no: 15 expression : variable ASSIGNOP logic_expression 

i=a[0]+a[1]

At line no: 15 expression_statement : expression SEMICOLON 

i=a[0]+a[1];

At line no: 15 statement : expression_statement 

i=a[0]+a[1];

At line no: 16 variable : ID 

j

At line no: 16 factor : CONST_INT 

2

At line no: 16 factor : CONST_INT 

3

At line no: 16 term : term MULOP unary_expression 

2*3

At line no: 16 factor : CONST_INT 

5

At line no: 16 factor : CONST_INT 

3

At line no: 16 term : term MULOP unary_expression 

5%3

At line no: 16 factor : CONST_INT 

4

At line no: 16 rel_expression : simple_expression RELOP simple_expression 

5%3<4

At line no: 16 factor : CONST_INT 

8

At line no: 16 logic_expression : logic_expression LOGICOP rel_expression 

5%3<4&&8

At line no: 16 factor : LPAREN expression RPAREN 

(5%3<4&&8)

At line no: 16 simple_expression : simple_expression ADDOP term 

2*3+(5%3<4&&8)

At line no: 16 factor : CONST_INT 

2

At line no: 16 logic_expression : logic_expression LOGICOP rel_expression 

2*3+(5%3<4&&8)||2

At line no: 16 expression : variable ASSIGNOP logic_expression 

j=2*3+(5%3<4&&8)||2

At line no: 16 expression_statement : expression SEMICOLON 

j=2*3+(5%3<4&&8)||2;

At line no: 16 statement : expression_statement 

j=2*3+(5%3<4&&8)||2;

At line no: 17 variable : ID 

d

At line no: 17 factor : CONST_INT 

1

At line no: 17 factor : CONST_INT 

2

At line no: 17 factor : CONST_INT 

3

At line no: 17 term : term MULOP unary_expression 

2*3

At line no: 17 arguments : arguments COMMA logic_expression 

1, 2*3

At line no: 17 factor : ID LPAREN argument_list RPAREN 

var(1, 2*3)

At line no: 17 factor : CONST_FLOAT 

3.5

At line no: 17 factor : CONST_INT 

2

At line no: 17 term : term MULOP unary_expression 

3.5*2

At line no: 17 simple_expression : simple_expression ADDOP term 

var(1, 2*3)+3.5*2

At line no: 17 expression : variable ASSIGNOP logic_expression 

d=var(1, 2*3)+3.5*2

At line no: 17 expression_statement : expression SEMICOLON 

d=var(1, 2*3)+3.5*2;

At line no: 17 statement : expression_statement 

d=var(1, 2*3)+3.5*2;

At line no: 18 factor : CONST_INT 

0

At line no: 18 statement : RETURN expression SEMICOLON 

return 0;

At line no: 20 compound_statement : LCURL statements RCURL 

{
int a[2], c, i, j;
}

At line no: 20 func_definition : type_specifier ID LPAREN RPAREN compound_statement 

int main()
{
int a[2], c, i, j;
}

At line no: 20 program : program unit 

int x, y, z;
float a;
int var()
b
void foo()
{
x=2;
}
int main()
{
int a[2], c, i, j;
}

At line no: 20 start : program 

